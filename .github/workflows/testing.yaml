---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Action test/validation workflow
name: "Test GitHub Action üß™"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  ### Test the GitHub Action in this Repository ###
  tests:
    name: "Test local GitHub Action"
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 3 # Increase this timeout value as needed
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Test local action
      - name: "Run action: ${{ github.repository }}"
        id: test-local
        uses: ./

      # Test local action
      - name: "Run action: ${{ github.repository }} [test-tags-semver]"
        id: semver
        uses: ./
        with:
          repository: 'lfreleng-actions/test-tags-semantic'
          path: 'test-tags-semantic'

      # Test local action
      - name: "Run action: ${{ github.repository }} [test-tags-calver]"
        id: calver
        uses: ./
        with:
          repository: 'lfreleng-actions/test-tags-calver'
          path: 'test-tags-calver'

      - name: "Validate action: ${{ github.repository }}"
        shell: bash
        run: |
          # Validate Action Output
          if [ "${{ steps.semver.outputs.tag }}" \
            != 'v0.1.1' ]; then
            echo 'Error: did not get expected semantic tag result ‚ùå'
            echo "Returned: ${{ steps.semver.outputs.tag }}"
            echo 'Expected: v0.1.1'
            errors='true'
          elif [ "${{ steps.semver.outputs.tag_count }}" \
            != '2' ]; then
            echo 'Error: did not get expected semver count ‚ùå'
            echo "Returned: ${{ steps.semver.outputs.tag_count }}"
            echo 'Expected: 2'
            errors='true'
          elif [ "${{ steps.calver.outputs.tag }}" \
            != '2025.02.01' ]; then
            echo 'Error: did not get expected calver tag result ‚ùå'
            echo "Returned: ${{ steps.calver.outputs.tag }}"
            echo 'Expected: 2025.02.01'
            errors='true'
          elif [ "${{ steps.calver.outputs.tag_count }}" \
            != '3' ]; then
            echo 'Error: did not get expected calver count ‚ùå'
            echo "Returned: ${{ steps.calver.outputs.tag_count }}"
            echo 'Expected: 3'
            errors='true'
          fi

          if [ "$errors" == 'true' ]; then
            echo 'Action validation failed ‚ùå'
            exit 1
          else
            echo 'Action validation passed ‚úÖ'
          fi
